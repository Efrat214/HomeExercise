{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Vaccine } from 'src/app/Vaccine';\nimport { VaccineForPatient } from 'src/app/VaccineForPatient';\nimport { Patient } from '../Patient';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nlet AddPatientsComponent = class AddPatientsComponent {\n  constructor(db) {\n    this.db = db;\n    this.p = new Patient(0, \"\", \"\", \"\", \"\", \"\", \"\", \"\", 0, new Date(), new Date(), new Date(), \"\");\n    this.arrV = [];\n    this.arrp = [];\n    this.x = 0;\n    this.firstHalf = true;\n    this.secondHalf = false;\n    this.PhotoFilePath = \"\";\n    this.url = \"\";\n    this.arrVaccineForPatient = [new VaccineForPatient(0, 0, 0, new Date(), new Vaccine(0, \"\"), new Patient(0, \"\", \"\", \"\", \"\", \"\", \"\", \"\", 0, new Date(), new Date(), new Date(), \"\")), new VaccineForPatient(0, 0, 0, new Date(), new Vaccine(0, \"\"), new Patient(0, \"\", \"\", \"\", \"\", \"\", \"\", \"\", 0, new Date(), new Date(), new Date(), \"\")), new VaccineForPatient(0, 0, 0, new Date(), new Vaccine(0, \"\"), new Patient(0, \"\", \"\", \"\", \"\", \"\", \"\", \"\", 0, new Date(), new Date(), new Date(), \"\")), new VaccineForPatient(0, 0, 0, new Date(), new Vaccine(0, \"\"), new Patient(0, \"\", \"\", \"\", \"\", \"\", \"\", \"\", 0, new Date(), new Date(), new Date(), \"\"))];\n    this.formData = new FormData();\n    this.formdataimg = new FormData();\n    this.registerForm = new FormGroup({\n      firstname: new FormControl('', [Validators.required, Validators.minLength(4)])\n      // firstname:new fo ['',[Validators.required, Validators.minLength(2)]],\n      // lastname: ['',[Validators.required, Validators.minLength(2)]],\n      // // username: ['', [Validators.required], this.customValidator.userNameValidator.bind(this.customValidator)],\n      // // password: ['', Validators.compose([Validators.required, this.customValidator.patternValidator()])],\n      // confirmPassword: ['', [Validators.required]],\n    });\n  }\n\n  ngOnInit() {\n    this.RefreshVaccinesLst();\n  }\n  get registerFormControl() {\n    return this.registerForm.controls;\n  }\n  RefreshVaccinesLst() {\n    this.db.getAllvaccinations().subscribe(x => {\n      this.arrV = x;\n      console.log(this.arrV);\n    });\n  }\n  continue() {\n    this.firstHalf = false;\n    this.secondHalf = true;\n  }\n  back() {\n    this.firstHalf = true;\n    this.secondHalf = false;\n  }\n  addUser() {\n    console.log(this.p);\n    if (this.registerForm.valid) {\n      this.db.addUser(this.p).subscribe(x => {\n        this.x = x;\n        console.log(x);\n        this.RefreshPatientsLst();\n        this.arrVaccineForPatient.forEach(v => {\n          console.log(v);\n          v.patient = this.arrp.find(element => element.id === this.x) || new Patient(0, '', '', '', '', '', '', '', 0, new Date(), new Date(), new Date(), \"\");\n          v.vaccine = this.arrV.find(element => element.id === this.x) || new Vaccine(0, \"\");\n          v.patientID = this.x;\n          if (v.vaccineID !== 0) {\n            this.db.addVaccinesForPatient(v).subscribe(y => {\n              console.log(y);\n            });\n          }\n        });\n      });\n    } else {\n      console.log(this.registerForm.value);\n      alert('not valid');\n    }\n  }\n  RefreshPatientsLst() {\n    this.db.GetAllUsers().subscribe(x => {\n      this.arrp = x;\n      console.log(this.arrp);\n      this.arrp.map(x => x.dateOfBirth);\n    });\n  }\n  uploadPhoto(event) {\n    var file = event.target.files[0];\n    const formData = new FormData();\n    formData.append('file', file);\n    this.formdataimg = formData;\n    console.log(this.formdataimg);\n    var reader = new FileReader();\n    reader.readAsDataURL(event.target.files[0]);\n    reader.onload = e => {\n      this.url = e.target.result;\n      console.log(this.url);\n    };\n    // this.db.UploadImage(formData).subscribe(x => {\n    //   this.PhotoFilePath = <any>x;\n    //   console.log(this.PhotoFilePath);\n    // }\n    // )\n  }\n};\n\nAddPatientsComponent = __decorate([Component({\n  selector: 'app-add-patients',\n  templateUrl: './add-patients.component.html',\n  styleUrls: ['./add-patients.component.css']\n})], AddPatientsComponent);\nexport { AddPatientsComponent };","map":{"version":3,"mappings":"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","names":["Component","Vaccine","VaccineForPatient","Patient","FormGroup","Validators","FormControl","AddPatientsComponent","constructor","db","Date","FormData","registerForm","firstname","required","minLength","ngOnInit","RefreshVaccinesLst","registerFormControl","controls","getAllvaccinations","subscribe","x","arrV","console","log","continue","firstHalf","secondHalf","back","addUser","p","valid","RefreshPatientsLst","arrVaccineForPatient","forEach","v","patient","arrp","find","element","id","vaccine","patientID","vaccineID","addVaccinesForPatient","y","value","alert","GetAllUsers","map","dateOfBirth","uploadPhoto","event","file","target","files","formData","append","formdataimg","reader","FileReader","readAsDataURL","onload","e","url","result","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\1\\Desktop\\תכנות\\עבודה\\corona-details\\src\\app\\patients\\add-patients\\add-patients.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { SharedServiceService } from 'src/app/shared-service.service';\nimport { VaccinationsComponent } from 'src/app/vaccinations/vaccinations.component';\nimport { Vaccine } from 'src/app/Vaccine';\nimport { VaccineForPatient } from 'src/app/VaccineForPatient';\nimport { Patient } from '../Patient';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-patients',\n  templateUrl: './add-patients.component.html',\n  styleUrls: ['./add-patients.component.css']\n})\nexport class AddPatientsComponent {\n  p: Patient = new Patient(0, \"\", \"\", \"\", \"\", \"\", \"\", \"\", 0, new Date(), new Date(), new Date(),\"\")\n  arrV: Vaccine[] = []\n  arrp:Patient[]=[];\n  x: number = 0\n  firstHalf: boolean = true\n  secondHalf: boolean = false\n  PhotoFilePath: string = \"\"\n  url:string=\"\"\n  arrVaccineForPatient: VaccineForPatient[] = [\n    new VaccineForPatient(0, 0, 0, new Date(),new Vaccine(0,\"\"),new Patient(0, \"\", \"\", \"\", \"\", \"\", \"\", \"\", 0, new Date(), new Date(), new Date(),\"\")),\n    new VaccineForPatient(0, 0, 0, new Date(),new Vaccine(0,\"\"),new Patient(0, \"\", \"\", \"\", \"\", \"\", \"\", \"\", 0, new Date(), new Date(), new Date(),\"\")),\n    new VaccineForPatient(0, 0, 0, new Date(),new Vaccine(0,\"\"),new Patient(0, \"\", \"\", \"\", \"\", \"\", \"\", \"\", 0, new Date(), new Date(), new Date(),\"\")),\n    new VaccineForPatient(0, 0, 0, new Date(),new Vaccine(0,\"\"),new Patient(0, \"\", \"\", \"\", \"\", \"\", \"\", \"\", 0, new Date(), new Date(), new Date(),\"\"))\n  ];\n  formData:FormData=new FormData()\n  formdataimg:FormData=new FormData()\n \n  registerForm: FormGroup;\n\n  constructor(private db: SharedServiceService) { \n    this.registerForm=new FormGroup({\n      firstname: new FormControl('', [\n        Validators.required,\n        Validators.minLength(4),\n      ]),\n      // firstname:new fo ['',[Validators.required, Validators.minLength(2)]],\n      // lastname: ['',[Validators.required, Validators.minLength(2)]],\n      // // username: ['', [Validators.required], this.customValidator.userNameValidator.bind(this.customValidator)],\n      // // password: ['', Validators.compose([Validators.required, this.customValidator.patternValidator()])],\n      // confirmPassword: ['', [Validators.required]],\n    },)\n  }\n  ngOnInit(): void {\n    this.RefreshVaccinesLst();\n\n  }\n  get registerFormControl() {\n    return this.registerForm.controls;\n  }\n  RefreshVaccinesLst() {\n    this.db.getAllvaccinations().subscribe(x => {\n      this.arrV = <Vaccine[]>x;\n      console.log(this.arrV)\n    });\n  }\n  continue() {\n    this.firstHalf = false\n    this.secondHalf = true\n  }\n  back() {\n    this.firstHalf = true\n    this.secondHalf = false\n  }\n  addUser() {\n    console.log(this.p);\n    if(this.registerForm.valid){\n      this.db.addUser(this.p).subscribe(x => {\n        this.x = <number>x;\n        console.log(x);\n        this.RefreshPatientsLst()\n        this.arrVaccineForPatient.forEach(v => {\n          console.log(v);\n          v.patient=this.arrp.find(element => element.id===this.x)|| new Patient(0, '', '', '', '', '', '', '', 0, new Date(), new Date(), new Date(),\"\");\n          v.vaccine=this.arrV.find(element => element.id===this.x)|| new Vaccine(0,\"\");\n          v.patientID = this.x;\n          if (v.vaccineID !== 0) {\n            this.db.addVaccinesForPatient(v).subscribe(y => {\n              console.log(y);\n            });\n          }\n        });\n      })\n    }\n    else{\n      console.log(this.registerForm.value);\n      \n      alert('not valid')\n    }\n  }\n  RefreshPatientsLst(){\n    this.db.GetAllUsers() .subscribe(x=>{     \n      this.arrp=<Patient[]>x;\n      console.log(this.arrp)\n      this.arrp.map(x=>x.dateOfBirth)\n    });\n  }\n  uploadPhoto(event: any) {\n    var file = event.target.files[0];\n    const formData: FormData = new FormData();\n    formData.append('file', file);\n    this.formdataimg=formData\n    console.log(this.formdataimg);\n    var reader=new FileReader()\n    reader.readAsDataURL(event.target.files[0])\n    reader.onload=(e:any)=>{\n      this.url=e.target.result\n      console.log(this.url);\n      \n    }\n    // this.db.UploadImage(formData).subscribe(x => {\n    //   this.PhotoFilePath = <any>x;\n    //   console.log(this.PhotoFilePath);\n    // }\n    // )\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}