{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Vaccine } from 'src/app/Vaccine';\nimport { VaccineForPatient } from 'src/app/VaccineForPatient';\nimport { Patient } from '../Patient';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nlet AddPatientsComponent = class AddPatientsComponent {\n  constructor(db, formBuilder) {\n    this.db = db;\n    this.formBuilder = formBuilder;\n    this.p = new Patient(0, \"\", \"\", \"\", \"\", \"\", \"\", \"\", 0, new Date(), new Date(), new Date(), \"\");\n    this.arrV = [];\n    this.arrp = [];\n    this.x = 0;\n    this.patientForm = new FormGroup({\n      patientId: new FormControl('', [Validators.required, Validators.minLength(9), Validators.maxLength(9)])\n      // Add more form controls here\n    });\n\n    this.firstHalf = true;\n    this.secondHalf = false;\n    this.PhotoFilePath = \"\";\n    this.arrVaccineForPatient = [new VaccineForPatient(0, 0, 0, new Date(), new Vaccine(0, \"\"), new Patient(0, \"\", \"\", \"\", \"\", \"\", \"\", \"\", 0, new Date(), new Date(), new Date(), \"\")), new VaccineForPatient(0, 0, 0, new Date(), new Vaccine(0, \"\"), new Patient(0, \"\", \"\", \"\", \"\", \"\", \"\", \"\", 0, new Date(), new Date(), new Date(), \"\")), new VaccineForPatient(0, 0, 0, new Date(), new Vaccine(0, \"\"), new Patient(0, \"\", \"\", \"\", \"\", \"\", \"\", \"\", 0, new Date(), new Date(), new Date(), \"\")), new VaccineForPatient(0, 0, 0, new Date(), new Vaccine(0, \"\"), new Patient(0, \"\", \"\", \"\", \"\", \"\", \"\", \"\", 0, new Date(), new Date(), new Date(), \"\"))];\n    this.formData = new FormData();\n    this.formdataimg = new FormData();\n    this.patientForm = this.formBuilder.group({\n      patientId: ['', [Validators.required, Validators.minLength(9), Validators.maxLength(9)]]\n    });\n  }\n  ngOnInit() {\n    this.RefreshVaccinesLst();\n  }\n  RefreshVaccinesLst() {\n    this.db.getAllvaccinations().subscribe(x => {\n      this.arrV = x;\n      console.log(this.arrV);\n    });\n  }\n  continue() {\n    this.firstHalf = false;\n    this.secondHalf = true;\n  }\n  back() {\n    this.firstHalf = true;\n    this.secondHalf = false;\n  }\n  addUser() {\n    console.log(this.p);\n    this.db.addUser(this.p).subscribe(x => {\n      this.x = x;\n      console.log(x);\n      this.RefreshPatientsLst();\n      this.arrVaccineForPatient.forEach(v => {\n        console.log(v);\n        v.patient = this.arrp.find(element => element.id === this.x) || new Patient(0, '', '', '', '', '', '', '', 0, new Date(), new Date(), new Date(), \"\");\n        v.vaccine = this.arrV.find(element => element.id === this.x) || new Vaccine(0, \"\");\n        v.patientID = this.x;\n        if (v.vaccineID !== 0) {\n          this.db.addVaccinesForPatient(v).subscribe(y => {\n            console.log(y);\n          });\n        }\n      });\n    });\n  }\n  RefreshPatientsLst() {\n    this.db.GetAllUsers().subscribe(x => {\n      this.arrp = x;\n      console.log(this.arrp);\n      this.arrp.map(x => x.dateOfBirth);\n    });\n  }\n  uploadPhoto(event) {\n    var file = event.target.files[0];\n    const formData = new FormData();\n    formData.append('file', file);\n    this.formdataimg = formData;\n    console.log(this.formdataimg);\n    this.db.UploadImage(formData).subscribe(x => {\n      this.PhotoFilePath = x;\n      console.log(this.PhotoFilePath);\n    });\n  }\n};\nAddPatientsComponent = __decorate([Component({\n  selector: 'app-add-patients',\n  templateUrl: './add-patients.component.html',\n  styleUrls: ['./add-patients.component.css']\n})], AddPatientsComponent);\nexport { AddPatientsComponent };","map":{"version":3,"mappings":"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","names":["Component","Vaccine","VaccineForPatient","Patient","FormGroup","FormControl","Validators","AddPatientsComponent","constructor","db","formBuilder","Date","patientId","required","minLength","maxLength","FormData","patientForm","group","ngOnInit","RefreshVaccinesLst","getAllvaccinations","subscribe","x","arrV","console","log","continue","firstHalf","secondHalf","back","addUser","p","RefreshPatientsLst","arrVaccineForPatient","forEach","v","patient","arrp","find","element","id","vaccine","patientID","vaccineID","addVaccinesForPatient","y","GetAllUsers","map","dateOfBirth","uploadPhoto","event","file","target","files","formData","append","formdataimg","UploadImage","PhotoFilePath","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\1\\Desktop\\תכנות\\עבודה\\corona-details\\src\\app\\patients\\add-patients\\add-patients.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { SharedServiceService } from 'src/app/shared-service.service';\nimport { VaccinationsComponent } from 'src/app/vaccinations/vaccinations.component';\nimport { Vaccine } from 'src/app/Vaccine';\nimport { VaccineForPatient } from 'src/app/VaccineForPatient';\nimport { Patient } from '../Patient';\nimport { FormGroup,FormControl, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-patients',\n  templateUrl: './add-patients.component.html',\n  styleUrls: ['./add-patients.component.css']\n})\nexport class AddPatientsComponent {\n  p: Patient = new Patient(0, \"\", \"\", \"\", \"\", \"\", \"\", \"\", 0, new Date(), new Date(), new Date(),\"\")\n  arrV: Vaccine[] = []\n  arrp:Patient[]=[];\n  x: number = 0\n  patientForm: FormGroup=new FormGroup({\n    patientId: new FormControl('', [Validators.required, Validators.minLength(9), Validators.maxLength(9)]),\n    // Add more form controls here\n  });\n  firstHalf: boolean = true\n  secondHalf: boolean = false\n  PhotoFilePath: string = \"\"\n  arrVaccineForPatient: VaccineForPatient[] = [\n    new VaccineForPatient(0, 0, 0, new Date(),new Vaccine(0,\"\"),new Patient(0, \"\", \"\", \"\", \"\", \"\", \"\", \"\", 0, new Date(), new Date(), new Date(),\"\")),\n    new VaccineForPatient(0, 0, 0, new Date(),new Vaccine(0,\"\"),new Patient(0, \"\", \"\", \"\", \"\", \"\", \"\", \"\", 0, new Date(), new Date(), new Date(),\"\")),\n    new VaccineForPatient(0, 0, 0, new Date(),new Vaccine(0,\"\"),new Patient(0, \"\", \"\", \"\", \"\", \"\", \"\", \"\", 0, new Date(), new Date(), new Date(),\"\")),\n    new VaccineForPatient(0, 0, 0, new Date(),new Vaccine(0,\"\"),new Patient(0, \"\", \"\", \"\", \"\", \"\", \"\", \"\", 0, new Date(), new Date(), new Date(),\"\"))\n  ];\n  formData:FormData=new FormData()\n  formdataimg:FormData=new FormData()\n  constructor(private db: SharedServiceService,private formBuilder: FormBuilder) {\n    this.patientForm = this.formBuilder.group({\n      patientId: ['', [Validators.required, Validators.minLength(9), Validators.maxLength(9)]],\n    });\n   }\n  ngOnInit(): void {\n    this.RefreshVaccinesLst();\n\n  }\n  RefreshVaccinesLst() {\n    this.db.getAllvaccinations().subscribe(x => {\n      this.arrV = <Vaccine[]>x;\n      console.log(this.arrV)\n    });\n  }\n  continue() {\n    this.firstHalf = false\n    this.secondHalf = true\n  }\n  back() {\n    this.firstHalf = true\n    this.secondHalf = false\n  }\n  addUser() {\n    console.log(this.p);\n    this.db.addUser(this.p).subscribe(x => {\n      this.x = <number>x;\n      console.log(x);\n      this.RefreshPatientsLst()\n      this.arrVaccineForPatient.forEach(v => {\n        console.log(v);\n        v.patient=this.arrp.find(element => element.id===this.x)|| new Patient(0, '', '', '', '', '', '', '', 0, new Date(), new Date(), new Date(),\"\");\n        v.vaccine=this.arrV.find(element => element.id===this.x)|| new Vaccine(0,\"\");\n        v.patientID = this.x;\n        if (v.vaccineID !== 0) {\n          this.db.addVaccinesForPatient(v).subscribe(y => {\n            console.log(y);\n          });\n        }\n      });\n    })\n  }\n  RefreshPatientsLst(){\n    this.db.GetAllUsers() .subscribe(x=>{     \n      this.arrp=<Patient[]>x;\n      console.log(this.arrp)\n      this.arrp.map(x=>x.dateOfBirth)\n    });\n  }\n  uploadPhoto(event: any) {\n    var file = event.target.files[0];\n    const formData: FormData = new FormData();\n    formData.append('file', file);\n    this.formdataimg=formData\n    console.log(this.formdataimg);\n    this.db.UploadImage(formData).subscribe(x => {\n      this.PhotoFilePath = <any>x;\n      console.log(this.PhotoFilePath);\n    }\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}