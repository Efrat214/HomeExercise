{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared-service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../add-patients/add-patients.component\";\nfunction ShowPatientsComponent_app_add_patients_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-add-patients\");\n  }\n}\nfunction ShowPatientsComponent_tr_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r3.Id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r3.Name);\n  }\n}\nfunction ShowPatientsComponent_tr_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r4.Id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r4.Name);\n  }\n}\nexport class ShowPatientsComponent {\n  constructor(db) {\n    this.db = db;\n    this.arrp = [];\n  }\n  ngOnInit() {\n    this.RefreshAreasLst();\n  }\n  RefreshAreasLst() {\n    this.db.GetAllUsers().subscribe(x => {\n      this.arrp = x;\n      console.log(this.arrp);\n      //  this.lstWithoutFilter=<Area[]>x;\n    });\n  }\n}\n\nShowPatientsComponent.ɵfac = function ShowPatientsComponent_Factory(t) {\n  return new (t || ShowPatientsComponent)(i0.ɵɵdirectiveInject(i1.SharedServiceService));\n};\nShowPatientsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ShowPatientsComponent,\n  selectors: [[\"app-show-patients\"]],\n  decls: 33,\n  vars: 6,\n  consts: [[\"type\", \"button\", \"data-toggle\", \"modal\", \"data-target\", \"#exampleModal\", \"data-backdrop\", \"static\", \"data-keyboard\", \"false\", 1, \"btn\", \"btn-info\", \"float-right\", \"m-2\", 3, \"click\"], [\"id\", \"exampleModal\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"role\", \"document\", 1, \"modal-dialog\", \"modal-dialog-centered\", \"modal-xl\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [4, \"ngIf\"], [1, \"table\", \"table-striped\"], [1, \"d-flex\", \"flex-row\"], [\"placeholder\", \"Filter\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"keyup\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function ShowPatientsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"show-patients works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"app-add-patients\");\n      i0.ɵɵelementStart(3, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function ShowPatientsComponent_Template_button_click_3_listener() {\n        return ctx.addClick();\n      });\n      i0.ɵɵtext(4, \" Add User \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"div\", 2)(7, \"div\", 3)(8, \"div\", 4)(9, \"h5\", 5);\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function ShowPatientsComponent_Template_button_click_11_listener() {\n        return ctx.closeClick();\n      });\n      i0.ɵɵelementStart(12, \"span\", 7);\n      i0.ɵɵtext(13, \"\\u00D7\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"div\", 8);\n      i0.ɵɵtemplate(15, ShowPatientsComponent_app_add_patients_15_Template, 1, 0, \"app-add-patients\", 9);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(16, \"table\", 10)(17, \"thead\")(18, \"tr\")(19, \"th\")(20, \"div\", 11)(21, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function ShowPatientsComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.IdFilter = $event;\n      })(\"keyup\", function ShowPatientsComponent_Template_input_keyup_21_listener() {\n        return ctx.Filter();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtext(22, \" Id \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"th\")(24, \"div\", 11)(25, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function ShowPatientsComponent_Template_input_ngModelChange_25_listener($event) {\n        return ctx.NameFilter = $event;\n      })(\"keyup\", function ShowPatientsComponent_Template_input_keyup_25_listener() {\n        return ctx.Filter();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtext(26, \" name \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"th\");\n      i0.ɵɵtext(28, \"Options\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(29, \"tbody\");\n      i0.ɵɵtemplate(30, ShowPatientsComponent_tr_30_Template, 5, 2, \"tr\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"table\");\n      i0.ɵɵtemplate(32, ShowPatientsComponent_tr_32_Template, 5, 2, \"tr\", 13);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵtextInterpolate(ctx.ModalTitle);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.ActivateAddEditAreaComp);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.IdFilter);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.NameFilter);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.arrp);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.arrp);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.AddPatientsComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAuBYA,mCAAqE;;;;;IAwBzEA,0BAA8B;IACtBA,YAAW;IAAAA,iBAAK;IACpBA,0BAAI;IAAAA,YAAa;IAAAA,iBAAK;;;;IADlBA,eAAW;IAAXA,gCAAW;IACXA,eAAa;IAAbA,kCAAa;;;;;IAmBzBA,0BAA8B;IACtBA,YAAW;IAAAA,iBAAK;IACpBA,0BAAI;IAAAA,YAAa;IAAAA,iBAAK;;;;IADlBA,eAAW;IAAXA,gCAAW;IACXA,eAAa;IAAbA,kCAAa;;;AC7DzB,OAAM,MAAOC,qBAAqB;EAGhCC,YAAoBC,EAAuB;IAAvB,OAAE,GAAFA,EAAE;IAFtB,SAAI,GAAW,EAAE;EAE4B;EAC7CC,QAAQ;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EACAA,eAAe;IACb,IAAI,CAACF,EAAE,CAACG,WAAW,EAAE,CAAEC,SAAS,CAACC,CAAC,IAAE;MAClC,IAAI,CAACC,IAAI,GAAYD,CAAC;MACtBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,IAAI,CAAC;MACxB;IACA,CAAC,CAAC;EACJ;;;AAbWR,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlChB,yBAAG;MAAAA,oCAAoB;MAAAA,iBAAI;MAC3BA,mCAAqC;MACrCA,iCAIC;MAFDA;QAAA,OAASiB,cAAU;MAAA,EAAC;MAGhBjB,0BACF;MAAAA,iBAAS;MAGTA,8BAA6H;MAItEA,aAAc;MAAAA,iBAAK;MAClEA,kCAEwB;MAAxBA;QAAA,OAASiB,gBAAY;MAAA,EAAC;MACpBjB,gCAAyB;MAAAA,uBAAO;MAAAA,iBAAO;MAG3CA,+BAAwB;MACpBA,kGAAqE;MACzEA,iBAAM;MAIdA,kCAAmC;MAKRA;QAAA;MAAA,EAAsB;QAAA,OAA+BiB,YAAQ;MAAA,EAAvC;MAA7BjB,iBAA2F;MAE/FA,qBACJ;MAAAA,iBAAK;MACLA,2BAAI;MAEOA;QAAA;MAAA,EAAwB;QAAA,OAA+BiB,YAAQ;MAAA,EAAvC;MAA/BjB,iBAA6F;MAE7FA,uBACJ;MAAAA,iBAAK;MACLA,2BAAI;MAAAA,wBAAO;MAAAA,iBAAK;MAGxBA,8BAAO;MACHA,uEAgBK;MACTA,iBAAQ;MAGZA,8BAAO;MACHA,uEAGK;MACTA,iBAAQ;;;MAzDiDA,gBAAc;MAAdA,oCAAc;MAQxCA,eAA6B;MAA7BA,kDAA6B;MAUjCA,eAAsB;MAAtBA,sCAAsB;MAM1BA,eAAwB;MAAxBA,wCAAwB;MAQlBA,eAAO;MAAPA,kCAAO;MAqBXA,eAAO;MAAPA,kCAAO","names":["i0","ShowPatientsComponent","constructor","db","ngOnInit","RefreshAreasLst","GetAllUsers","subscribe","x","arrp","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\1\\Desktop\\תכנות\\עבודה\\corona-details\\src\\app\\patients\\show-patients\\show-patients.component.html","C:\\Users\\1\\Desktop\\תכנות\\עבודה\\corona-details\\src\\app\\patients\\show-patients\\show-patients.component.ts"],"sourcesContent":["<p>show-patients works!</p>\n<app-add-patients></app-add-patients>\n<button type=\"button\" class=\"btn btn-info float-right m-2\" \ndata-toggle=\"modal\" data-target=\"#exampleModal\"\n(click)=\"addClick()\"\ndata-backdrop=\"static\" data-keyboard=\"false\"\n>\n    Add User\n  </button>\n  \n  <!-- Modal -->\n  <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered modal-xl\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">{{ModalTitle}}</h5>\n          <button type=\"button\" class=\"close\" \n          data-dismiss=\"modal\" aria-label=\"Close\"\n          (click)=\"closeClick()\" >\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n            <app-add-patients *ngIf=\"ActivateAddEditAreaComp\"></app-add-patients>\n        </div>\n      </div>\n    </div>\n  </div>\n<table class=\"table table-striped\">\n    <thead>\n        <tr>\n            <th>\n                <div class=\"d-flex flex-row\">\n                    <input [(ngModel)]=\"IdFilter\" class=\"form-control\" (keyup)=\"Filter()\" placeholder=\"Filter\">\n                </div>\n                Id\n            </th>\n            <th>\n                <div class=\"d-flex flex-row\">\n                <input [(ngModel)]=\"NameFilter\" class=\"form-control\" (keyup)=\"Filter()\" placeholder=\"Filter\">\n                </div>\n                name\n            </th>\n            <th>Options</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let item of arrp\">\n            <td>{{item.Id}}</td>\n            <td>{{item.Name}}</td>\n            <!-- <td>\n            <button type=\"button\" class=\"btn btn-light mr-1\" data-toggle=\"modal\" data-target=\"#exampleModal\" (click)=\"editClick(item)\" data-backdrop=\"static\" data-keyboard=\"false\">\n                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-pencil-square\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\n                  <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\n                </svg>\n            </button>\n            <button type=\"button\" class=\"btn btn-light mr-1\" (click)=\"deleteClick(item)\">\n                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-trash-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path fill-rule=\"evenodd\" d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5a.5.5 0 0 0-1 0v7a.5.5 0 0 0 1 0v-7z\"/>\n                </svg>\n            </button>\n            </td> -->\n        </tr>\n    </tbody>\n</table>\n\n<table>\n    <tr *ngFor=\"let item of arrp\">\n        <td>{{item.Id}}</td>\n        <td>{{item.Name}}</td>\n    </tr>\n</table>","import { Component } from '@angular/core';\nimport { SharedServiceService } from 'src/app/shared-service.service';\nimport { Patient } from '../Patient';\n\n@Component({\n  selector: 'app-show-patients',\n  templateUrl: './show-patients.component.html',\n  styleUrls: ['./show-patients.component.css']\n})\nexport class ShowPatientsComponent {\n  arrp:Patient[]=[];\n\n  constructor(private db:SharedServiceService){}\n  ngOnInit(): void {\n    this.RefreshAreasLst();\n  }\n  RefreshAreasLst(){\n    this.db.GetAllUsers() .subscribe(x=>{     \n      this.arrp=<Patient[]>x;\n      console.log(this.arrp)\n    //  this.lstWithoutFilter=<Area[]>x;\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}