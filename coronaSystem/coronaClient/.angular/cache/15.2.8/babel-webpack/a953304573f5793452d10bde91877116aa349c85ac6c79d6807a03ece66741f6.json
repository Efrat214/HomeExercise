{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/1/Desktop/\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA/\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4/corona-details/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport Chart from 'chart.js/auto';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared-service.service\";\nexport class GraphComponent {\n  constructor(db) {\n    this.db = db;\n  }\n  ngOnInit() {\n    this.createChart();\n  }\n  createChart() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.db.getPositive().subscribe(data => {\n        const dates = Object.keys(data).map(key => new Date(key));\n        const counts = Object.values(data);\n        // Create the chart\n        _this.chart = new Chart(ctx, {\n          type: 'line',\n          data: {\n            labels: dates,\n            datasets: [{\n              label: 'Number of positive cases',\n              data: counts,\n              borderColor: 'rgb(255, 99, 132)',\n              fill: false\n            }]\n          },\n          options: {\n            responsive: true,\n            scales: {\n              x: {\n                type: 'time',\n                time: {\n                  unit: 'day'\n                }\n              },\n              y: {\n                beginAtZero: true\n              }\n            }\n          }\n        });\n      });\n    })();\n  }\n  ngOnDestroy() {\n    if (this.chart) {\n      this.chart.destroy();\n    }\n  }\n}\nGraphComponent.ɵfac = function GraphComponent_Factory(t) {\n  return new (t || GraphComponent)(i0.ɵɵdirectiveInject(i1.SharedServiceService));\n};\nGraphComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GraphComponent,\n  selectors: [[\"app-graph\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"chart-container\"], [\"id\", \"MyChart\"]],\n  template: function GraphComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"canvas\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.chart);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AACA,OAAOA,KAAK,MAAM,eAAe;;;AAQjC,OAAM,MAAOC,cAAc;EAMzBC,YAAoBC,EAAuB;IAAvB,OAAE,GAAFA,EAAE;EAAuB;EAH7CC,QAAQ;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEMA,WAAW;IAAA;IAAA;MACf,KAAI,CAACF,EAAE,CAACG,WAAW,EAAE,CAACC,SAAS,CAACC,IAAI,IAAE;QACpC,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACI,GAAG,CAACC,GAAG,IAAI,IAAIC,IAAI,CAACD,GAAG,CAAC,CAAC;QAC3D,MAAME,MAAM,GAAGL,MAAM,CAACM,MAAM,CAACR,IAAI,CAAC;QAElC;QAEA,KAAI,CAACS,KAAK,GAAG,IAAIjB,KAAK,CAACkB,GAAG,EAAE;UAC1BC,IAAI,EAAE,MAAM;UACZX,IAAI,EAAE;YACJY,MAAM,EAAEX,KAAK;YACbY,QAAQ,EAAE,CAAC;cACTC,KAAK,EAAE,0BAA0B;cACjCd,IAAI,EAAEO,MAAM;cACZQ,WAAW,EAAE,mBAAmB;cAChCC,IAAI,EAAE;aACP;WACF;UACDC,OAAO,EAAE;YACPC,UAAU,EAAE,IAAI;YAChBC,MAAM,EAAE;cACNC,CAAC,EAAE;gBACDT,IAAI,EAAE,MAAM;gBACZU,IAAI,EAAE;kBACJC,IAAI,EAAE;;eAET;cACDC,CAAC,EAAE;gBACDC,WAAW,EAAE;;;;SAIpB,CAAC;MAGF,CAAC,CAAC;IAAC;EACL;EAEAC,WAAW;IACT,IAAI,IAAI,CAAChB,KAAK,EAAE;MACd,IAAI,CAACA,KAAK,CAACiB,OAAO,EAAE;;EAExB;;AAjDWjC,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAkC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT3BC,8BAA6B;MACFA,YAAW;MAAAA,iBAAS;;;MAApBA,eAAW;MAAXA,+BAAW","names":["Chart","GraphComponent","constructor","db","ngOnInit","createChart","getPositive","subscribe","data","dates","Object","keys","map","key","Date","counts","values","chart","ctx","type","labels","datasets","label","borderColor","fill","options","responsive","scales","x","time","unit","y","beginAtZero","ngOnDestroy","destroy","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\1\\Desktop\\תכנות\\עבודה\\corona-details\\src\\app\\graph\\graph.component.ts","C:\\Users\\1\\Desktop\\תכנות\\עבודה\\corona-details\\src\\app\\graph\\graph.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport Chart from 'chart.js/auto';\nimport { SharedServiceService } from '../shared-service.service';\n\n@Component({\n  selector: 'app-graph',\n  templateUrl: './graph.component.html',\n  styleUrls: ['./graph.component.css']\n})\nexport class GraphComponent {\n\n  public chart: any\n  ngOnInit(): void {\n    this.createChart();\n  }\n  constructor(private db:SharedServiceService){}\n  async createChart() {\n    this.db.getPositive().subscribe(data=>{\n      const dates = Object.keys(data).map(key => new Date(key));\n    const counts = Object.values(data);\n\n    // Create the chart\n    \n    this.chart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: dates,\n        datasets: [{\n          label: 'Number of positive cases',\n          data: counts,\n          borderColor: 'rgb(255, 99, 132)',\n          fill: false\n        }]\n      },\n      options: {\n        responsive: true,\n        scales: {\n          x: {\n            type: 'time',\n            time: {\n              unit: 'day'\n            }\n          },\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    })\n  \n      \n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.chart) {\n      this.chart.destroy();\n    }\n  }\n  // createChart(){  \n  //   this.chart = new Chart(\"MyChart\", {\n  //     type: 'line', //this denotes tha type of chart\n\n  //     data: {// values on X-Axis\n  //       labels: ['2022-05-10', '2022-05-11', '2022-05-12','2022-05-13',\n\t// \t\t\t\t\t\t\t '2022-05-14', '2022-05-15', '2022-05-16','2022-05-17', ], \n\t//        datasets: [\n  //         {\n  //           label: \"active seeks\",\n  //           data: ['467','576', '572', '79', '92',\n\t// \t\t\t\t\t\t\t '574', '573', '576'],\n  //           backgroundColor: 'lightblue'\n  //         }\n  //       ]\n  //     },\n  //     options: {\n  //       aspectRatio:2.5\n  //     }\n      \n  //   });\n  // }\n}\n","<div class=\"chart-container\">\n    <canvas  id=\"MyChart\" >{{ chart }}</canvas>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}