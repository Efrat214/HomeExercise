{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class GraphComponent {\n  constructor() {\n    this.chartType = 'line';\n    this.chartDatasets = [{\n      data: [65, 59, 80, 81, 56, 55, 40],\n      label: 'My First dataset'\n    }, {\n      data: [28, 48, 40, 19, 86, 27, 90],\n      label: 'My Second dataset'\n    }];\n    this.chartLabels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n    this.chartColors = [{\n      backgroundColor: 'rgba(105, 0, 132, .2)',\n      borderColor: 'rgba(200, 99, 132, .7)',\n      borderWidth: 2\n    }, {\n      backgroundColor: 'rgba(0, 137, 132, .2)',\n      borderColor: 'rgba(0, 10, 130, .7)',\n      borderWidth: 2\n    }];\n    this.chartOptions = {\n      responsive: true\n    };\n  }\n  chartClicked(event) {\n    console.log(event);\n  }\n  chartHovered(event) {\n    console.log(event);\n  }\n}\nGraphComponent.ɵfac = function GraphComponent_Factory(t) {\n  return new (t || GraphComponent)();\n};\nGraphComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GraphComponent,\n  selectors: [[\"app-graph\"]],\n  decls: 4,\n  vars: 6,\n  consts: [[2, \"display\", \"block\"], [\"mdbChart\", \"\", 3, \"chartType\", \"datasets\", \"labels\", \"colors\", \"options\", \"legend\", \"chartHover\", \"chartClick\"]],\n  template: function GraphComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"graph works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"canvas\", 1);\n      i0.ɵɵlistener(\"chartHover\", function GraphComponent_Template_canvas_chartHover_3_listener($event) {\n        return ctx.chartHovered($event);\n      })(\"chartClick\", function GraphComponent_Template_canvas_chartClick_3_listener($event) {\n        return ctx.chartClicked($event);\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"chartType\", ctx.chartType)(\"datasets\", ctx.chartDatasets)(\"labels\", ctx.chartLabels)(\"colors\", ctx.chartColors)(\"options\", ctx.chartOptions)(\"legend\", true);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,cAAc;EAL3BC;IAME,cAAS,GAAG,MAAM;IAElB,kBAAa,GAAG,CACd;MAAEC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAkB,CAAE,EACjE;MAAED,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAmB,CAAE,CACnE;IAED,gBAAW,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC;IAE9E,gBAAW,GAAG,CACZ;MACEC,eAAe,EAAE,uBAAuB;MACxCC,WAAW,EAAE,wBAAwB;MACrCC,WAAW,EAAE;KACd,EACD;MACEF,eAAe,EAAE,uBAAuB;MACxCC,WAAW,EAAE,sBAAsB;MACnCC,WAAW,EAAE;KACd,CACF;IAED,iBAAY,GAAQ;MAClBC,UAAU,EAAE;KACb;;EAEDC,YAAY,CAACC,KAAU;IACrBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;EAEAG,YAAY,CAACH,KAAU;IACrBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;;AAjCWT,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCP3BC,yBAAG;MAAAA,4BAAY;MAAAA,iBAAI;MACnBA,8BAA4B;MAQtBA;QAAA,OAAcC,wBAAoB;MAAA,EAAC;QAAA,OACrBA,wBAAoB;MAAA,EADC;MAErCD,iBAAS;;;MARPA,eAAuB;MAAvBA,yCAAuB","names":["GraphComponent","constructor","data","label","backgroundColor","borderColor","borderWidth","responsive","chartClicked","event","console","log","chartHovered","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\1\\Desktop\\תכנות\\עבודה\\corona-details\\src\\app\\graph\\graph.component.ts","C:\\Users\\1\\Desktop\\תכנות\\עבודה\\corona-details\\src\\app\\graph\\graph.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {} from '@'\n@Component({\n  selector: 'app-graph',\n  templateUrl: './graph.component.html',\n  styleUrls: ['./graph.component.css']\n})\nexport class GraphComponent {\n  chartType = 'line';\n\n  chartDatasets = [\n    { data: [65, 59, 80, 81, 56, 55, 40], label: 'My First dataset' },\n    { data: [28, 48, 40, 19, 86, 27, 90], label: 'My Second dataset' }\n  ];\n\n  chartLabels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n\n  chartColors = [\n    {\n      backgroundColor: 'rgba(105, 0, 132, .2)',\n      borderColor: 'rgba(200, 99, 132, .7)',\n      borderWidth: 2,\n    },\n    {\n      backgroundColor: 'rgba(0, 137, 132, .2)',\n      borderColor: 'rgba(0, 10, 130, .7)',\n      borderWidth: 2,\n    }\n  ];\n\n  chartOptions: any = {\n    responsive: true\n  };\n\n  chartClicked(event: any) {\n    console.log(event);\n  }\n\n  chartHovered(event: any) {\n    console.log(event);\n  }\n\n}\n","<p>graph works!</p>\n<div style=\"display: block\">\n    <canvas mdbChart\n      [chartType]=\"chartType\"\n      [datasets]=\"chartDatasets\"\n      [labels]=\"chartLabels\"\n      [colors]=\"chartColors\"\n      [options]=\"chartOptions\"\n      [legend]=\"true\"\n      (chartHover)=\"chartHovered($event)\"\n      (chartClick)=\"chartClicked($event)\">\n    </canvas>\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}